
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND ARRAY ASSIGN BEGIN BOOLEAN COLON COMMA DIV DO DOT DOTDOT ELSE END EQ FALSE FOR FUNCTION GT GTE ID IF INTEGER LBRACKET LENGTH LPAREN LT LTE MINUS MOD NEQ NOT NUMBER OF OR PLUS PROGRAM RBRACKET READ READLN RPAREN SEMICOLON STRING STRING_LITERAL THEN TIMES TO TRUE VAR WHILE WRITE WRITELNProgram : PROGRAM ID SEMICOLON Block DOTBlock : Declarations CompoundStatementDeclarations : VarDeclarationPart FunctionDeclarationsVarDeclarationPart : VAR VarDeclarationList\n| emptyVarDeclarationList : VarDeclaration\n| VarDeclarationList VarDeclarationVarDeclaration : IdList COLON Type SEMICOLONIdList : ID\n| ID COMMA IdListType : BasicType\n| ArrayTypeBasicType : INTEGER\n| STRING\n| BOOLEANArrayType : ARRAY LBRACKET NUMBER DOTDOT NUMBER RBRACKET OF BasicTypeFunctionDeclarations : FunctionDeclaration FunctionDeclarations\n| emptyFunctionDeclaration : FUNCTION ID LPAREN FormalParameters RPAREN COLON BasicType SEMICOLON Declarations CompoundStatementFormalParameters : ID COLON Type\n| ID COLON Type SEMICOLON FormalParameters\n| emptyCompoundStatement : BEGIN StatementList ENDStatementList : Statement\n| StatementList SEMICOLON StatementStatement : AssignmentStatement\n| WriteStatement\n| ReadStatement\n| IfStatement\n| WhileStatement\n| ForStatement\n| CompoundStatement\n| emptyReadStatement : READLN LPAREN ArrayAccess RPAREN\n| READLN LPAREN ID RPARENAssignmentStatement : ID ASSIGN Expression\n| ArrayAccess ASSIGN ExpressionWriteStatement : WRITELN LPAREN ExpressionList RPARENExpressionList : Expression\n| ExpressionList COMMA ExpressionIfStatement : IF Expression THEN StatementIfStatement : IF Expression THEN Statement ELSE StatementWhileStatement : WHILE Expression DO StatementForStatement : FOR ID ASSIGN Expression TO Expression DO StatementExpression : ExprBoolExprBool : ExprExprBool : Expr OpRel ExprOpRel : EQ\n| NEQ\n| LT\n| LTE\n| GT\n| GTEExpr : TermoExpr : Expr OpAd TermoOpAd : PLUSOpAd : MINUSOpAd : ORTermo : FatorTermo : Termo OpMul FatorOpMul : TIMESOpMul : DIVOpMul : MODOpMul : ANDFator : ConstFator : VarFator : LPAREN ExprBool RPARENFator : Expression_function_callFator : NOT FatorConst : NUMBERConst : STRING_LITERALConst : TRUEConst : FALSEVar : IDVar : ID LBRACKET ExprBool RBRACKETExpression_function_call : ID LPAREN ActualParameters RPAREN\n| LENGTH LPAREN ExprBool RPARENActualParameters : ExprBool\n| ExprBool COMMA ActualParameters\n| emptyArrayAccess : ID LBRACKET Expression RBRACKETempty :'
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,10,],[0,-1,]),'ID':([2,8,12,16,17,18,35,36,37,40,42,44,45,46,47,48,49,57,59,68,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,104,105,106,107,108,112,116,135,138,140,147,150,],[3,20,31,39,20,-6,64,64,67,-7,20,31,64,64,64,64,84,64,64,109,31,64,64,-48,-49,-50,-51,-52,-53,-56,-57,-58,64,-61,-62,-63,-64,64,64,64,31,64,-8,64,31,64,64,109,31,]),'SEMICOLON':([3,12,21,22,23,24,25,26,27,28,29,30,43,44,51,52,53,54,55,56,58,60,61,62,63,64,69,70,71,72,73,74,77,78,80,85,103,107,115,117,118,119,120,121,122,123,129,135,136,137,139,141,144,148,150,154,158,],[4,-82,44,-24,-26,-27,-28,-29,-30,-31,-32,-33,-23,-82,-45,-46,-54,-59,-65,-66,-68,-70,-71,-72,-73,-74,112,-11,-12,-13,-14,-15,-25,-36,-37,-82,-69,-82,-38,-34,-35,-41,-47,-55,-60,-67,-43,-82,-75,-76,-77,147,-42,152,-82,-44,-16,]),'VAR':([4,152,],[8,8,]),'FUNCTION':([4,7,9,14,17,18,40,43,112,152,157,],[-82,16,-5,16,-4,-6,-7,-23,-8,-82,-19,]),'BEGIN':([4,6,7,9,12,13,14,15,17,18,38,40,43,44,85,107,112,135,150,152,155,157,],[-82,12,-82,-5,12,-3,-82,-18,-4,-6,-17,-7,-23,12,12,12,-8,12,12,-82,12,-19,]),'DOT':([5,11,43,],[10,-2,-23,]),'WRITELN':([12,44,85,107,135,150,],[33,33,33,33,33,33,]),'READLN':([12,44,85,107,135,150,],[34,34,34,34,34,34,]),'IF':([12,44,85,107,135,150,],[35,35,35,35,35,35,]),'WHILE':([12,44,85,107,135,150,],[36,36,36,36,36,36,]),'FOR':([12,44,85,107,135,150,],[37,37,37,37,37,37,]),'END':([12,21,22,23,24,25,26,27,28,29,30,43,44,51,52,53,54,55,56,58,60,61,62,63,64,77,78,80,85,103,107,115,117,118,119,120,121,122,123,129,135,136,137,139,144,150,154,],[-82,43,-24,-26,-27,-28,-29,-30,-31,-32,-33,-23,-82,-45,-46,-54,-59,-65,-66,-68,-70,-71,-72,-73,-74,-25,-36,-37,-82,-69,-82,-38,-34,-35,-41,-47,-55,-60,-67,-43,-82,-75,-76,-77,-42,-82,-44,]),'COLON':([19,20,76,109,132,],[41,-9,-10,131,142,]),'COMMA':([20,51,52,53,54,55,56,58,60,61,62,63,64,81,82,103,120,121,122,123,126,134,136,137,139,],[42,-45,-46,-54,-59,-65,-66,-68,-70,-71,-72,-73,-74,116,-39,-69,-47,-55,-60,-67,138,-40,-75,-76,-77,]),'ELSE':([23,24,25,26,27,28,29,30,43,51,52,53,54,55,56,58,60,61,62,63,64,78,80,85,103,107,115,117,118,119,120,121,122,123,129,135,136,137,139,144,150,154,],[-26,-27,-28,-29,-30,-31,-32,-33,-23,-45,-46,-54,-59,-65,-66,-68,-70,-71,-72,-73,-74,-36,-37,-82,-69,-82,-38,-34,-35,135,-47,-55,-60,-67,-43,-82,-75,-76,-77,-42,-82,-44,]),'ASSIGN':([31,32,67,114,],[45,47,108,-81,]),'LBRACKET':([31,64,75,84,],[46,104,113,46,]),'LPAREN':([33,34,35,36,39,45,46,47,48,57,59,64,65,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,104,105,106,108,116,138,140,],[48,49,57,57,68,57,57,57,57,57,57,105,106,57,57,-48,-49,-50,-51,-52,-53,-56,-57,-58,57,-61,-62,-63,-64,57,57,57,57,57,57,57,]),'NOT':([35,36,45,46,47,48,57,59,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,104,105,106,108,116,138,140,],[59,59,59,59,59,59,59,59,59,59,-48,-49,-50,-51,-52,-53,-56,-57,-58,59,-61,-62,-63,-64,59,59,59,59,59,59,59,]),'NUMBER':([35,36,45,46,47,48,57,59,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,104,105,106,108,113,116,138,140,143,],[60,60,60,60,60,60,60,60,60,60,-48,-49,-50,-51,-52,-53,-56,-57,-58,60,-61,-62,-63,-64,60,60,60,60,133,60,60,60,149,]),'STRING_LITERAL':([35,36,45,46,47,48,57,59,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,104,105,106,108,116,138,140,],[61,61,61,61,61,61,61,61,61,61,-48,-49,-50,-51,-52,-53,-56,-57,-58,61,-61,-62,-63,-64,61,61,61,61,61,61,61,]),'TRUE':([35,36,45,46,47,48,57,59,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,104,105,106,108,116,138,140,],[62,62,62,62,62,62,62,62,62,62,-48,-49,-50,-51,-52,-53,-56,-57,-58,62,-61,-62,-63,-64,62,62,62,62,62,62,62,]),'FALSE':([35,36,45,46,47,48,57,59,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,104,105,106,108,116,138,140,],[63,63,63,63,63,63,63,63,63,63,-48,-49,-50,-51,-52,-53,-56,-57,-58,63,-61,-62,-63,-64,63,63,63,63,63,63,63,]),'LENGTH':([35,36,45,46,47,48,57,59,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,104,105,106,108,116,138,140,],[65,65,65,65,65,65,65,65,65,65,-48,-49,-50,-51,-52,-53,-56,-57,-58,65,-61,-62,-63,-64,65,65,65,65,65,65,65,]),'INTEGER':([41,131,142,156,],[72,72,72,72,]),'STRING':([41,131,142,156,],[73,73,73,73,]),'BOOLEAN':([41,131,142,156,],[74,74,74,74,]),'ARRAY':([41,131,],[75,75,]),'THEN':([50,51,52,53,54,55,56,58,60,61,62,63,64,103,120,121,122,123,136,137,139,],[85,-45,-46,-54,-59,-65,-66,-68,-70,-71,-72,-73,-74,-69,-47,-55,-60,-67,-75,-76,-77,]),'DO':([51,52,53,54,55,56,58,60,61,62,63,64,66,103,120,121,122,123,136,137,139,146,],[-45,-46,-54,-59,-65,-66,-68,-70,-71,-72,-73,-74,107,-69,-47,-55,-60,-67,-75,-76,-77,150,]),'RBRACKET':([51,52,53,54,55,56,58,60,61,62,63,64,79,103,120,121,122,123,124,136,137,139,149,],[-45,-46,-54,-59,-65,-66,-68,-70,-71,-72,-73,-74,114,-69,-47,-55,-60,-67,136,-75,-76,-77,153,]),'RPAREN':([51,52,53,54,55,56,58,60,61,62,63,64,68,70,71,72,73,74,81,82,83,84,102,103,105,110,111,114,120,121,122,123,125,126,127,128,134,136,137,138,139,141,145,147,151,158,],[-45,-46,-54,-59,-65,-66,-68,-70,-71,-72,-73,-74,-82,-11,-12,-13,-14,-15,115,-39,117,118,123,-69,-82,132,-22,-81,-47,-55,-60,-67,137,-78,-80,139,-40,-75,-76,-82,-77,-20,-79,-82,-21,-16,]),'TO':([51,52,53,54,55,56,58,60,61,62,63,64,103,120,121,122,123,130,136,137,139,],[-45,-46,-54,-59,-65,-66,-68,-70,-71,-72,-73,-74,-69,-47,-55,-60,-67,140,-75,-76,-77,]),'EQ':([52,53,54,55,56,58,60,61,62,63,64,103,121,122,123,136,137,139,],[88,-54,-59,-65,-66,-68,-70,-71,-72,-73,-74,-69,-55,-60,-67,-75,-76,-77,]),'NEQ':([52,53,54,55,56,58,60,61,62,63,64,103,121,122,123,136,137,139,],[89,-54,-59,-65,-66,-68,-70,-71,-72,-73,-74,-69,-55,-60,-67,-75,-76,-77,]),'LT':([52,53,54,55,56,58,60,61,62,63,64,103,121,122,123,136,137,139,],[90,-54,-59,-65,-66,-68,-70,-71,-72,-73,-74,-69,-55,-60,-67,-75,-76,-77,]),'LTE':([52,53,54,55,56,58,60,61,62,63,64,103,121,122,123,136,137,139,],[91,-54,-59,-65,-66,-68,-70,-71,-72,-73,-74,-69,-55,-60,-67,-75,-76,-77,]),'GT':([52,53,54,55,56,58,60,61,62,63,64,103,121,122,123,136,137,139,],[92,-54,-59,-65,-66,-68,-70,-71,-72,-73,-74,-69,-55,-60,-67,-75,-76,-77,]),'GTE':([52,53,54,55,56,58,60,61,62,63,64,103,121,122,123,136,137,139,],[93,-54,-59,-65,-66,-68,-70,-71,-72,-73,-74,-69,-55,-60,-67,-75,-76,-77,]),'PLUS':([52,53,54,55,56,58,60,61,62,63,64,103,120,121,122,123,136,137,139,],[94,-54,-59,-65,-66,-68,-70,-71,-72,-73,-74,-69,94,-55,-60,-67,-75,-76,-77,]),'MINUS':([52,53,54,55,56,58,60,61,62,63,64,103,120,121,122,123,136,137,139,],[95,-54,-59,-65,-66,-68,-70,-71,-72,-73,-74,-69,95,-55,-60,-67,-75,-76,-77,]),'OR':([52,53,54,55,56,58,60,61,62,63,64,103,120,121,122,123,136,137,139,],[96,-54,-59,-65,-66,-68,-70,-71,-72,-73,-74,-69,96,-55,-60,-67,-75,-76,-77,]),'TIMES':([53,54,55,56,58,60,61,62,63,64,103,121,122,123,136,137,139,],[98,-59,-65,-66,-68,-70,-71,-72,-73,-74,-69,98,-60,-67,-75,-76,-77,]),'DIV':([53,54,55,56,58,60,61,62,63,64,103,121,122,123,136,137,139,],[99,-59,-65,-66,-68,-70,-71,-72,-73,-74,-69,99,-60,-67,-75,-76,-77,]),'MOD':([53,54,55,56,58,60,61,62,63,64,103,121,122,123,136,137,139,],[100,-59,-65,-66,-68,-70,-71,-72,-73,-74,-69,100,-60,-67,-75,-76,-77,]),'AND':([53,54,55,56,58,60,61,62,63,64,103,121,122,123,136,137,139,],[101,-59,-65,-66,-68,-70,-71,-72,-73,-74,-69,101,-60,-67,-75,-76,-77,]),'DOTDOT':([133,],[143,]),'OF':([153,],[156,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'Program':([0,],[1,]),'Block':([4,],[5,]),'Declarations':([4,152,],[6,155,]),'VarDeclarationPart':([4,152,],[7,7,]),'empty':([4,7,12,14,44,68,85,105,107,135,138,147,150,152,],[9,15,30,15,30,111,30,127,30,30,127,111,30,9,]),'CompoundStatement':([6,12,44,85,107,135,150,155,],[11,29,29,29,29,29,29,157,]),'FunctionDeclarations':([7,14,],[13,38,]),'FunctionDeclaration':([7,14,],[14,14,]),'VarDeclarationList':([8,],[17,]),'VarDeclaration':([8,17,],[18,40,]),'IdList':([8,17,42,],[19,19,76,]),'StatementList':([12,],[21,]),'Statement':([12,44,85,107,135,150,],[22,77,119,129,144,154,]),'AssignmentStatement':([12,44,85,107,135,150,],[23,23,23,23,23,23,]),'WriteStatement':([12,44,85,107,135,150,],[24,24,24,24,24,24,]),'ReadStatement':([12,44,85,107,135,150,],[25,25,25,25,25,25,]),'IfStatement':([12,44,85,107,135,150,],[26,26,26,26,26,26,]),'WhileStatement':([12,44,85,107,135,150,],[27,27,27,27,27,27,]),'ForStatement':([12,44,85,107,135,150,],[28,28,28,28,28,28,]),'ArrayAccess':([12,44,49,85,107,135,150,],[32,32,83,32,32,32,32,]),'Expression':([35,36,45,46,47,48,108,116,140,],[50,66,78,79,80,82,130,134,146,]),'ExprBool':([35,36,45,46,47,48,57,104,105,106,108,116,138,140,],[51,51,51,51,51,51,102,124,126,128,51,51,126,51,]),'Expr':([35,36,45,46,47,48,57,86,104,105,106,108,116,138,140,],[52,52,52,52,52,52,52,120,52,52,52,52,52,52,52,]),'Termo':([35,36,45,46,47,48,57,86,87,104,105,106,108,116,138,140,],[53,53,53,53,53,53,53,53,121,53,53,53,53,53,53,53,]),'Fator':([35,36,45,46,47,48,57,59,86,87,97,104,105,106,108,116,138,140,],[54,54,54,54,54,54,54,103,54,54,122,54,54,54,54,54,54,54,]),'Const':([35,36,45,46,47,48,57,59,86,87,97,104,105,106,108,116,138,140,],[55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'Var':([35,36,45,46,47,48,57,59,86,87,97,104,105,106,108,116,138,140,],[56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'Expression_function_call':([35,36,45,46,47,48,57,59,86,87,97,104,105,106,108,116,138,140,],[58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'Type':([41,131,],[69,141,]),'BasicType':([41,131,142,156,],[70,70,148,158,]),'ArrayType':([41,131,],[71,71,]),'ExpressionList':([48,],[81,]),'OpRel':([52,],[86,]),'OpAd':([52,120,],[87,87,]),'OpMul':([53,121,],[97,97,]),'FormalParameters':([68,147,],[110,151,]),'ActualParameters':([105,138,],[125,145,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> Program","S'",1,None,None,None),
  ('Program -> PROGRAM ID SEMICOLON Block DOT','Program',5,'p_Program','yacc.py',55),
  ('Block -> Declarations CompoundStatement','Block',2,'p_Block','yacc.py',59),
  ('Declarations -> VarDeclarationPart FunctionDeclarations','Declarations',2,'p_Declarations','yacc.py',63),
  ('VarDeclarationPart -> VAR VarDeclarationList','VarDeclarationPart',2,'p_VarDeclarationPart','yacc.py',67),
  ('VarDeclarationPart -> empty','VarDeclarationPart',1,'p_VarDeclarationPart','yacc.py',68),
  ('VarDeclarationList -> VarDeclaration','VarDeclarationList',1,'p_VarDeclarationList','yacc.py',72),
  ('VarDeclarationList -> VarDeclarationList VarDeclaration','VarDeclarationList',2,'p_VarDeclarationList','yacc.py',73),
  ('VarDeclaration -> IdList COLON Type SEMICOLON','VarDeclaration',4,'p_VarDeclaration','yacc.py',77),
  ('IdList -> ID','IdList',1,'p_IdList','yacc.py',103),
  ('IdList -> ID COMMA IdList','IdList',3,'p_IdList','yacc.py',104),
  ('Type -> BasicType','Type',1,'p_Type','yacc.py',108),
  ('Type -> ArrayType','Type',1,'p_Type','yacc.py',109),
  ('BasicType -> INTEGER','BasicType',1,'p_BasicType','yacc.py',113),
  ('BasicType -> STRING','BasicType',1,'p_BasicType','yacc.py',114),
  ('BasicType -> BOOLEAN','BasicType',1,'p_BasicType','yacc.py',115),
  ('ArrayType -> ARRAY LBRACKET NUMBER DOTDOT NUMBER RBRACKET OF BasicType','ArrayType',8,'p_ArrayType','yacc.py',119),
  ('FunctionDeclarations -> FunctionDeclaration FunctionDeclarations','FunctionDeclarations',2,'p_FunctionDeclarations','yacc.py',126),
  ('FunctionDeclarations -> empty','FunctionDeclarations',1,'p_FunctionDeclarations','yacc.py',127),
  ('FunctionDeclaration -> FUNCTION ID LPAREN FormalParameters RPAREN COLON BasicType SEMICOLON Declarations CompoundStatement','FunctionDeclaration',10,'p_FunctionDeclaration','yacc.py',131),
  ('FormalParameters -> ID COLON Type','FormalParameters',3,'p_FormalParameters','yacc.py',162),
  ('FormalParameters -> ID COLON Type SEMICOLON FormalParameters','FormalParameters',5,'p_FormalParameters','yacc.py',163),
  ('FormalParameters -> empty','FormalParameters',1,'p_FormalParameters','yacc.py',164),
  ('CompoundStatement -> BEGIN StatementList END','CompoundStatement',3,'p_CompoundStatement','yacc.py',173),
  ('StatementList -> Statement','StatementList',1,'p_StatementList','yacc.py',177),
  ('StatementList -> StatementList SEMICOLON Statement','StatementList',3,'p_StatementList','yacc.py',178),
  ('Statement -> AssignmentStatement','Statement',1,'p_Statement','yacc.py',182),
  ('Statement -> WriteStatement','Statement',1,'p_Statement','yacc.py',183),
  ('Statement -> ReadStatement','Statement',1,'p_Statement','yacc.py',184),
  ('Statement -> IfStatement','Statement',1,'p_Statement','yacc.py',185),
  ('Statement -> WhileStatement','Statement',1,'p_Statement','yacc.py',186),
  ('Statement -> ForStatement','Statement',1,'p_Statement','yacc.py',187),
  ('Statement -> CompoundStatement','Statement',1,'p_Statement','yacc.py',188),
  ('Statement -> empty','Statement',1,'p_Statement','yacc.py',189),
  ('ReadStatement -> READLN LPAREN ArrayAccess RPAREN','ReadStatement',4,'p_ReadStatement','yacc.py',193),
  ('ReadStatement -> READLN LPAREN ID RPAREN','ReadStatement',4,'p_ReadStatement','yacc.py',194),
  ('AssignmentStatement -> ID ASSIGN Expression','AssignmentStatement',3,'p_AssignmentStatement','yacc.py',232),
  ('AssignmentStatement -> ArrayAccess ASSIGN Expression','AssignmentStatement',3,'p_AssignmentStatement','yacc.py',233),
  ('WriteStatement -> WRITELN LPAREN ExpressionList RPAREN','WriteStatement',4,'p_WriteStatement','yacc.py',280),
  ('ExpressionList -> Expression','ExpressionList',1,'p_ExpressionList','yacc.py',295),
  ('ExpressionList -> ExpressionList COMMA Expression','ExpressionList',3,'p_ExpressionList','yacc.py',296),
  ('IfStatement -> IF Expression THEN Statement','IfStatement',4,'p_IfStatement_then','yacc.py',304),
  ('IfStatement -> IF Expression THEN Statement ELSE Statement','IfStatement',6,'p_IfStatement_else','yacc.py',315),
  ('WhileStatement -> WHILE Expression DO Statement','WhileStatement',4,'p_WhileStatement','yacc.py',328),
  ('ForStatement -> FOR ID ASSIGN Expression TO Expression DO Statement','ForStatement',8,'p_ForStatement','yacc.py',341),
  ('Expression -> ExprBool','Expression',1,'p_Expression','yacc.py',389),
  ('ExprBool -> Expr','ExprBool',1,'p_ExprBool_expr','yacc.py',394),
  ('ExprBool -> Expr OpRel Expr','ExprBool',3,'p_ExprBool_rel','yacc.py',398),
  ('OpRel -> EQ','OpRel',1,'p_OpRel','yacc.py',411),
  ('OpRel -> NEQ','OpRel',1,'p_OpRel','yacc.py',412),
  ('OpRel -> LT','OpRel',1,'p_OpRel','yacc.py',413),
  ('OpRel -> LTE','OpRel',1,'p_OpRel','yacc.py',414),
  ('OpRel -> GT','OpRel',1,'p_OpRel','yacc.py',415),
  ('OpRel -> GTE','OpRel',1,'p_OpRel','yacc.py',416),
  ('Expr -> Termo','Expr',1,'p_Expr_termo','yacc.py',421),
  ('Expr -> Expr OpAd Termo','Expr',3,'p_Expr_opad','yacc.py',425),
  ('OpAd -> PLUS','OpAd',1,'p_OpAd_plus','yacc.py',441),
  ('OpAd -> MINUS','OpAd',1,'p_OpAd_minus','yacc.py',444),
  ('OpAd -> OR','OpAd',1,'p_OpAd_or','yacc.py',447),
  ('Termo -> Fator','Termo',1,'p_Termo_fator','yacc.py',452),
  ('Termo -> Termo OpMul Fator','Termo',3,'p_Termo_opmul','yacc.py',456),
  ('OpMul -> TIMES','OpMul',1,'p_OpMul_times','yacc.py',472),
  ('OpMul -> DIV','OpMul',1,'p_OpMul_div','yacc.py',475),
  ('OpMul -> MOD','OpMul',1,'p_OpMul_mod','yacc.py',478),
  ('OpMul -> AND','OpMul',1,'p_OpMul_and','yacc.py',481),
  ('Fator -> Const','Fator',1,'p_Fator_const','yacc.py',486),
  ('Fator -> Var','Fator',1,'p_Fator_var','yacc.py',490),
  ('Fator -> LPAREN ExprBool RPAREN','Fator',3,'p_Fator_group','yacc.py',494),
  ('Fator -> Expression_function_call','Fator',1,'p_Fator_function_call','yacc.py',498),
  ('Fator -> NOT Fator','Fator',2,'p_Fator_not','yacc.py',503),
  ('Const -> NUMBER','Const',1,'p_Const_number','yacc.py',514),
  ('Const -> STRING_LITERAL','Const',1,'p_Const_string','yacc.py',517),
  ('Const -> TRUE','Const',1,'p_Const_true','yacc.py',520),
  ('Const -> FALSE','Const',1,'p_Const_false','yacc.py',523),
  ('Var -> ID','Var',1,'p_Var_id','yacc.py',528),
  ('Var -> ID LBRACKET ExprBool RBRACKET','Var',4,'p_Var_array','yacc.py',543),
  ('Expression_function_call -> ID LPAREN ActualParameters RPAREN','Expression_function_call',4,'p_Expression_function_call','yacc.py',574),
  ('Expression_function_call -> LENGTH LPAREN ExprBool RPAREN','Expression_function_call',4,'p_Expression_function_call','yacc.py',575),
  ('ActualParameters -> ExprBool','ActualParameters',1,'p_ActualParameters','yacc.py',607),
  ('ActualParameters -> ExprBool COMMA ActualParameters','ActualParameters',3,'p_ActualParameters','yacc.py',608),
  ('ActualParameters -> empty','ActualParameters',1,'p_ActualParameters','yacc.py',609),
  ('ArrayAccess -> ID LBRACKET Expression RBRACKET','ArrayAccess',4,'p_ArrayAccess','yacc.py',616),
  ('empty -> <empty>','empty',0,'p_empty','yacc.py',622),
]
